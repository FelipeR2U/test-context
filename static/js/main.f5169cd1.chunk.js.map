{"version":3,"sources":["logo.svg","contexts/Modal.tsx","components/Button.tsx","components/Modal.tsx","components/Wrapper.tsx","App.tsx","index.tsx"],"names":["ModalContext","createContext","ModalProvider","children","useState","isOpen","setIsOpen","Provider","value","openModal","closeModal","toggleModal","OpenButton","name","useContext","onClick","CloseButton","Modal","style","border","Wrapper","display","justifyContent","App","className","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAAe,G,KAAA,IAA0B,kC,sBCa5BA,EAAeC,wBAAgC,IAE/CC,EAAiC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAsB,EACzCC,oBAAS,GADgC,mBAC9DC,EAD8D,KACtDC,EADsD,KAerE,OACE,cAACN,EAAaO,SAAd,CACEC,MAAO,CACLH,SACAI,UAhBY,WAChBH,GAAU,IAgBNI,WAba,WACjBJ,GAAU,IAaNK,YAVc,WAClBL,GAAWD,KAIX,SAQGF,KChCMS,EAA8B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACpCJ,EAAcK,qBAAWd,GAAzBS,UAER,OAAO,yBAAQM,QAASN,EAAjB,wBAAwCI,MAGpCG,EAA+B,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,KACrCH,EAAeI,qBAAWd,GAA1BU,WAER,OAAO,yBAAQK,QAASL,EAAjB,yBAA0CG,MCCpCI,EAVgB,SAAC,GAAqB,IAAnBJ,EAAkB,EAAlBA,KAGhC,OAFmBC,qBAAWd,GAAtBK,OAGN,sBAAKa,MAAO,CAAEC,OAAQ,eAAtB,mBAA8CN,EAA9C,WAEA,sBAAKK,MAAO,CAAEC,OAAQ,eAAtB,mBAA8CN,EAA9C,cCQWO,EAZkB,SAAC,GAAqB,IAAnBP,EAAkB,EAAlBA,KAClC,OACE,cAAC,EAAD,UACE,sBAAKK,MAAO,CAAEG,QAAS,OAAQC,eAAgB,QAA/C,UACE,cAAC,EAAD,CAAYT,KAAMA,IAClB,cAAC,EAAD,CAAaA,KAAMA,IACnB,cAAC,EAAD,CAAOA,KAAMA,UCENU,EAZO,WACpB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,EAAD,CAASd,KAAM,MACf,cAAC,EAAD,CAASA,KAAM,YCNvBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f5169cd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { createContext, ReactNode, useState } from 'react'\n\ninterface Props {\n  children: ReactNode\n}\n\ninterface ModalContextData {\n  isOpen: boolean\n  openModal: () => void\n  closeModal: () => void\n  toggleModal: () => void\n}\n\nexport const ModalContext = createContext<ModalContextData>({} as ModalContextData)\n\nexport const ModalProvider: React.FC<Props> = ({ children }: Props) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const openModal = () => {\n    setIsOpen(true)\n  }\n\n  const closeModal = () => {\n    setIsOpen(false)\n  }\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <ModalContext.Provider\n      value={{\n        isOpen,\n        openModal,\n        closeModal,\n        toggleModal\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  )\n}\n","import React, { useContext } from 'react'\nimport { ModalContext } from '../contexts/Modal'\n\ninterface Props {\n  name: string\n}\n\nexport const OpenButton: React.FC<Props> = ({ name }: Props) => {\n  const { openModal } = useContext(ModalContext)\n\n  return <button onClick={openModal}>Open Modal {name}</button>\n}\n\nexport const CloseButton: React.FC<Props> = ({ name }: Props) => {\n  const { closeModal } = useContext(ModalContext)\n\n  return <button onClick={closeModal}>Close Modal {name}</button>\n}\n","import React, { useContext } from 'react'\nimport { ModalContext } from '../contexts/Modal'\n\ninterface Props {\n  name: string\n}\n\nconst Modal: React.FC<Props> = ({ name }: Props) => {\n  const { isOpen } = useContext(ModalContext)\n\n  return isOpen ? (\n    <div style={{ border: 'solid black' }}>Modal {name} open</div>\n  ) : (\n    <div style={{ border: 'solid black' }}>Modal {name} closed</div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\nimport { ModalProvider } from '../contexts/Modal'\nimport { CloseButton, OpenButton } from './Button'\nimport Modal from './Modal'\n\ninterface Props {\n  name: string\n}\n\nconst Wrapper: React.FC<Props> = ({ name }: Props) => {\n  return (\n    <ModalProvider>\n      <div style={{ display: 'flex', justifyContent: 'left' }}>\n        <OpenButton name={name}></OpenButton>\n        <CloseButton name={name}></CloseButton>\n        <Modal name={name}></Modal>\n      </div>\n    </ModalProvider>\n  )\n}\n\nexport default Wrapper\n","import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Wrapper from './components/Wrapper'\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img src={logo} className='App-logo' alt='logo' />\n        <Wrapper name={'1'}></Wrapper>\n        <Wrapper name={'2'}></Wrapper>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}